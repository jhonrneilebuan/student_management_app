import 'package:flutter/material.dart';
import '../services/api_service.dart';
import '../models/student.dart';

class StudentFormScreen extends StatefulWidget {
  @override
  _StudentFormScreenState createState() => _StudentFormScreenState();
}

class _StudentFormScreenState extends State<StudentFormScreen> {
  final _formKey = GlobalKey<FormState>();
  final ApiService apiService = ApiService();
  String firstName = '';
  String lastName = '';
  String course = '';
  String? year;
  bool enrolled = false;

  Future<void> _submitForm() async {
    if (_formKey.currentState!.validate()) {
      _formKey.currentState!.save();

      Student newStudent = Student(
        id: '', // ID will be auto-generated by the backend
        firstName: firstName,
        lastName: lastName,
        course: course,
        year: year ?? 'First Year', 
        enrolled: enrolled,
      );

      await apiService.createStudent(newStudent);
      Navigator.pushReplacementNamed(context, '/studentList'); 
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(resizeToAvoidBottomInset: true,
      appBar: AppBar(title: Text('Fill Student Information')),
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Form(
            key: _formKey,
            child: Column(
              children: [
                TextFormField(
                  decoration: const InputDecoration(labelText: 'First Name'),
                  validator: (value) {
                    if (value == null || value.isEmpty) {
                      return 'Please enter the first name';
                    }
                    return null;
                  },
                  onSaved: (value) => firstName = value!,
                ),
                TextFormField(
                  decoration: const InputDecoration(labelText: 'Last Name'),
                  validator: (value) {
                    if (value == null || value.isEmpty) {
                      return 'Please enter the last name';
                    }
                    return null;
                  },
                  onSaved: (value) => lastName = value!,
                ),
                TextFormField(
                  decoration: const InputDecoration(labelText: 'Course'),
                  validator: (value) {
                    if (value == null || value.isEmpty) {
                      return 'Please enter the course';
                    }
                    return null;
                  },
                  onSaved: (value) => course = value!,
                ),
                DropdownButtonFormField<String>(
                  decoration: const InputDecoration(labelText: 'Year'),
                  value: year,
                  items: ['First Year', 'Second Year', 'Third Year', 'Fourth Year', 'Fifth Year']
                      .map((year) => DropdownMenuItem(
                            value: year,
                            child: Text(year),
                          ))
                      .toList(),
                  onChanged: (value) => setState(() => year = value),
                  validator: (value) => value == null ? 'Please select a year' : null,
                ),
                SwitchListTile(
                  title: Text('Enrolled'),
                  value: enrolled,
                  onChanged: (value) => setState(() => enrolled = value),
                ),
                SizedBox(height: 20),
                ElevatedButton(
                  onPressed: _submitForm,
                  child: Text('Submit'),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
